OUTPUT FOR RUNNING TESTS 10 times:
randomtestcard1.c:
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (memcmp(G.discard[j], testG.discard[j], sizeof(int) * (G.discardCount[j] - 1)) == 0), line 155.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (memcmp(G.discard[j], testG.discard[j], sizeof(int) * (G.discardCount[j] - 1)) == 0), line 155.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Assert failed: (testG.handCount[player] == G.handCount[player] + 2), line 129.
Assert failed: (isSameSet(topDeck, topHand, numSet, isGreaterThan)), line 177.
Minutes elapsed:     0.00
File 'dominion.c'
Lines executed:17.87% of 610
Creating 'dominion.c.gcov'

randomtestcard2.c:
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Assert failed: (G.handCount[j] + 1 == testG.handCount[j]), line 154.
Assert failed: (G.deckCount[j] == testG.deckCount[j] + 1), line 158.
Minutes elapsed:     0.00
File 'dominion.c'
Lines executed:18.52% of 610
Creating 'dominion.c.gcov'

randomtestadventurer.c:
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (memcmp(G.discard[j], testG.discard[j], sizeof(int) * (G.discardCount[j] - 1)) == 0), line 145.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Assert failed: (testG.playedCardCount == G.playedCardCount + 1), line 116.
Assert failed: (testG.playedCards[testG.playedCardCount-1] == adventurer), line 117.
Assert failed: (testG.handCount[player] == G.handCount[player] + 1), line 118.
Assert failed: (G.handCount[player] + G.discardCount[player] + G.deckCount[player] + G.playedCardCount == testG.handCount[player] + testG.discardCount[player] + testG.deckCount[player] + testG.playedCardCount), line 127.
Minutes elapsed:     0.00
File 'dominion.c'
Lines executed:18.20% of 610
Creating 'dominion.c.gcov'

FUNCTION AND BRANCH COVERAGE OVERALL
Function 'updateCoins'
Lines executed:81.82% of 11
Branches executed:100.00% of 8
Taken at least once:75.00% of 8
No calls

Function 'gainCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 1

Function 'discardCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'cardEffect'
Lines executed:0.00% of 230
Branches executed:0.00% of 179
Taken at least once:0.00% of 179
Calls executed:0.00% of 58

Function 'greatHallCard'
Lines executed:0.00% of 5
No branches
Calls executed:0.00% of 2

Function 'villageCard'
Lines executed:0.00% of 5
No branches
Calls executed:0.00% of 2

Function 'councilRoomCard'
Lines executed:0.00% of 9
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'smithyCard'
Lines executed:0.00% of 5
Branches executed:0.00% of 2
Taken at least once:0.00% of 2
Calls executed:0.00% of 2

Function 'adventurerCard'
Lines executed:94.12% of 17
Branches executed:100.00% of 12
Taken at least once:91.67% of 12
Calls executed:50.00% of 2

Function 'getCost'
Lines executed:0.00% of 57
Branches executed:0.00% of 28
Taken at least once:0.00% of 28
No calls

Function 'drawCard'
Lines executed:36.36% of 22
Branches executed:33.33% of 6
Taken at least once:16.67% of 6
Calls executed:0.00% of 1

Function 'getWinners'
Lines executed:0.00% of 24
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
Calls executed:0.00% of 2

Function 'scoreFor'
Lines executed:0.00% of 24
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
Calls executed:0.00% of 3

Function 'isGameOver'
Lines executed:0.00% of 10
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'endTurn'
Lines executed:0.00% of 20
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 3

Function 'whoseTurn'
Lines executed:0.00% of 2
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 9
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'supplyCount'
Lines executed:0.00% of 2
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 3
No branches
Calls executed:0.00% of 1

Function 'numHandCards'
Lines executed:0.00% of 2
No branches
Calls executed:0.00% of 1

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
Calls executed:0.00% of 4

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
Calls executed:0.00% of 3

Function 'shuffle'
Lines executed:93.75% of 16
Branches executed:100.00% of 8
Taken at least once:87.50% of 8
Calls executed:100.00% of 2

Function 'initializeGame'
Lines executed:93.55% of 62
Branches executed:100.00% of 46
Taken at least once:86.96% of 46
Calls executed:100.00% of 5

Function 'kingdomCards'
Lines executed:0.00% of 13
No branches
No calls

Function 'newGame'
Lines executed:0.00% of 3
No branches
No calls

Function 'compare'
Lines executed:83.33% of 6
Branches executed:100.00% of 4
Taken at least once:75.00% of 4
No calls

File 'dominion.c'
Lines executed:18.20% of 610
Branches executed:19.18% of 417
Taken at least once:16.31% of 417
Calls executed:8.42% of 95
Creating 'dominion.c.gcov'

